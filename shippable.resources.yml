resources:

  - name: sh-myapp3
    type: image
    integration: docker
    pointer:
      sourceName: "scriptnull/debian"       
      #sourceName: "busybox"
      isPull: true
    seed:
      versionName: "driftking"
      #versionName: "latest"

  # - name: sample_node
  #   type: gitRepo
  #   integration: git
  #   pointer:
  #     sourceName: ankunath/sample_node
  #     branch: master    

  # - name: newIntegration   
  #   type: integration
  #   integration: docker
  #     #versionName: "latest"

  # - name: sn-kube-cluster
  #   type: cluster
  #   integration: kubemaster
    # pointer: 
    #   namespace: 'todayspace'

  # - name: my-params
  #   type: params
  #   version:
  #     params:
  #       HELLO: "ShippableCodeFaster5"
  #       SHIPPABLE: "code-faster"


  - name: tri-cluster
    type: cluster
    integration: triton
    pointer:
      region: "us-east-2"

  # - name: slackNotification
  #   type: notification
  #   integration: slack
  #   pointer:
  #     recipients:
  #       #- "#testissues"
  #       - "#slackchannel"
  # - name: scale
  #   type: replicas
  #   version:
  #     count: 10

  # # - name: lb
  # #   type: loadBalancer
  # #   pointer:
  # #     sourceName: EC2Contai-EcsElast-1HSINMX36W0XC
  # #     role: newRole

  # - name: stagingVerBase
  #   type: version
  #   seed:
  #     versionName: "v10.12.1-alpha"

  # # - name: ddc-cluster
  # #   type: cluster
  # #   integration: ddc
  # #   pointer:
  # #     sourceName: "small-cluster" #name of the cluster we are deploying.


  # - name: sn-file-4
  #   type: file
  #   pointer:
  #     sourceName: "https://raw.githubusercontent.com/scriptnull/vici/master/vici.init.js"
  #   seed:
  #     versionName: "newVersionShip"



  - name: sh-docker-opts
    type: dockerOptions
    version:
      memory: 23
      #cpuShares: 7
      #entryPoint: "/app"
      #workingDir: "/app"
      #cmd: "node"
      #privileged: true
  #    readOnlyRootFilesystem: true
  #     #network: host
      #restartPolicy: "OnFailure"
  #     autodestroy: "no"
  #     autoredeploy: true
  #     sequential_deployment: true
     # user: 7100
      # volumes:
      #   - "/anku/user/100:/makemeworking:ro"
      #domainName: "www.levelachievers.com"
  #     nickname: teamBRAVE
  #     # portMappings:
  #     #   - "80:80"
  #     dnsServers:
  #       - "127.0.0.3"
  #     dnsSearch:
  #       - "ae592553-251a-4860-8828-a377aed9f636.us-sw-1.cns.joyent.com"
  #     labels:
  #       ri_tu: 123
  #     #deployment_strategy: "high_availability"
  #     securityOptions:
  #       - label:user:USER
  #       - label:role:ROLE
      # capAdd:
      #   - ALL
      # capDrop:
      #   - NET_ADMIN
      #   - SYS_ADMIN
  #     cGroupParent: "m-executer-abcd"
      # hostName: "shubh"
      # tty: true
      # stdin: true
      # stdinOnce: true
  #     # devices:
  #     #   - "/dev/ttyUSB0:/dev/ttyUSB0"
  #     memorySwap: 100
  #     # linked_to_service:
  #     #   - "to_service": "nginx-manifest-dcl-1.dcl-deploy-nginx-manifest-dcl-debc8df9-1c13-4803-97b9-65af6307107c"
  #     #   - "name" : "shubh"
  #     # extraHosts:
  #     #   - "somehost:162.242.195.82"
  #     #   - "otherhost:50.31.209.229"
  #     # publishAllPorts: true
  #     # links:
  #     #   -  nginx-manifest-dcl-1.dcl-deploy-nginx-manifest-dcl-debc8df9-1c13-4803-97b9-65af6307107c:alias
  #     roles:
  #       - global
  #     tags:
  #       - staging
  #     #nickName: "shubhaaaaaaaaaaaaaaaaaaaaaa"
  #     #pid: "host"
  #     # volumesFrom:
  #     #   - "nginx-manifest-dcl-1.dcl-deploy-nginx-manifest-dcl-debc8df9-1c13-4803-97b9-65af6307107c"
  #     # volumes:
  #     #   - "/usr/bin:/makemeworking:ro"
  #     ############################## for gke ###########################
  #     # pod:
  #     #   terminationGracePeriodSeconds: 500
  #     #   activeDeadlineSeconds: 1000
  #     #   dnsPolicy: "Default"

  # - name: lb                               #required
  #   type: loadBalancer                          #required
  #   integration: gke  #Required for use in provision jobs
  #   pointer:
  #     sourceName: "small-cluster"  # the service name (metadata.name)
  #     #method: ExternalName | ClusterIP | NodePort | LoadBalancer # the service type Kubernetes default: ClusterIP
  #     #namespace: <string> # The namespace for the service
  #   version:
      # ports:
      #   - name: <string>  # Required for multiple ports, must be a DNS_LABEL
      #     protocol: TCP | UDP  # Kubernetes default: TCP
      #     port: <integer>     # Required.
      #     targetPort: <string> # A number in 1-65535 or an "IANA_SVC_NAME"  This is the port to access the pod.
      #     nodePort: <integer> # Port exposed on the node.  Kubernetes will auto-allocate by default.
      # selector:
      #   <string>: <string> # Required. Labels to match the pod
      #   <string>: <string> # Labels to match the pod
      # clusterIP: None | "" | 0.0.0.0 # Optional IP Address of the service.  Ignored for ExternalName type.
      # externalIPs:
      #   - <string> # Optional IP Addresses for which nodes in the cluster will also accept traffic for this service
      # sessionAffinity: ClientIP | None # Kubernetes default: None
      # loadBalancerIP: <string> # LoadBalancer-type services will be created with this IP Address, if supported by the "cloud provider"
      # loadBalancerSourceRanges:
      #   - <string> # If supported by the "cloud provider," traffic through the load balancer is limited to these addresses
      # externalName: <string> # Valid DNS name to be returned as CNAME for this service.  Only for ExternalName-type services.





  # - name: dcl-cluster
  #   type: cluster
  #   integration: dcl
  #   pointer:
  #     sourceName: "default"

  # - name: gke-cluster
  #   type: cluster
  #   integration: gke
  #   pointer:
  #     sourceName: "small-cluster"
  #     region: "europe-west1-b"
  # - name: ecs-cluster
  #   type: cluster
  #   integration: aws
  #   pointer:
  #     sourceName : "default" #name of the cluster we are deploying
  #     region: "us-west-2"
